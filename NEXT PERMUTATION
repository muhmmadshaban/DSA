class Solution {
public:
    void nextPermutation(vector<int>& A) {
     //FIND PIVOT FIRST
     int pivot = -1;
     int size=A.size();
     //PIVOT IS THE NUMBER WHICH IS SMALLER THAN NEXT ONE IN ARRAY WHICH ALSO CONTAINS REVERSED SORTED SEQUENCE

     for(int i=size-2;i>=0;i--){
        if(A[i+1]>A[i]){
            pivot=i;
            break;
        }
     }   
     if(pivot==-1){
        reverse(A.begin(),A.end());
            return ;
        }
     

     //NOW FIND RIGHT MOST ELEMENT GREATER THAN PIVOT
     for(int i=size-1; i>pivot;i--){
        if(A[i]>A[pivot]){
                swap(A[i],A[pivot]);
                break;
        }
     }

    //NOW REVERSE ALL THE ARRAY AFTER THE PIVOT + ELEMENTS
    int i=pivot+1,j=size-1;
    while(i<=j){
        swap(A[i],A[j]);
        i++;
        j--;
    }
    }
};
